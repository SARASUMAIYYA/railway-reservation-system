{"ast":null,"code":"//import config from './config.json'\n\nvar baseUrl = \"http://localhost:3001\";\nexport function login(body) {\n  console.log(body);\n  return callPost(baseUrl + '/login', body);\n}\nexport function register(body) {\n  return callPost(baseUrl + '/register', body);\n}\nexport function routes() {\n  return callGet(baseUrl + '/routes');\n}\nexport function route(station) {\n  return callGet(baseUrl + '/railway/route/' + station);\n}\nexport function trains() {\n  return callGet(baseUrl + '/railway/trains/');\n}\nexport function trainsByRoute(route) {\n  return callGet(baseUrl + '/railway/trains/' + route);\n}\nexport function classes() {\n  return callGet(baseUrl + '/railway/classes/');\n}\nexport function schedules() {\n  return callGet(baseUrl + '/railway/schedules/');\n}\nexport function validateCard(body) {\n  return callPost(baseUrl + '/payment/card', body);\n}\nexport function validatePhone(body) {\n  return callPost(baseUrl + '/payment/phone', body);\n}\nexport function makeReservation(body) {\n  return callPost(baseUrl + '/railway/reservations', body);\n}\nexport function getReservations(user) {\n  return callGet(baseUrl + '/railway/reservations/' + user);\n}\nexport function deleteReservation(id) {\n  return callDelete(baseUrl + '/railway/reservations/' + id);\n}\nexport function updateAccount(body, id) {\n  return callPut(baseUrl + '/users/' + id, body);\n}\nexport function contact(body) {\n  return callPost(baseUrl + '/railway/contact', body);\n}\nvar callGet = function callGet(url) {\n  return fetch(url).then(handleres);\n};\nvar callPost = function callPost(url, body) {\n  return fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(handleres);\n};\nvar callPut = function callPut(url, body) {\n  return fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(body),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(handleres);\n};\nvar callDelete = function callDelete(url) {\n  return fetch(url, {\n    method: 'DELETE'\n  }).then(handleres);\n};\nvar handleres = function handleres(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    if (res.status === 404) {\n      return Promise.reject();\n    } else {\n      throw res.json();\n    }\n  }\n};","map":{"version":3,"names":["baseUrl","login","body","console","log","callPost","register","routes","callGet","route","station","trains","trainsByRoute","classes","schedules","validateCard","validatePhone","makeReservation","getReservations","user","deleteReservation","id","callDelete","updateAccount","callPut","contact","url","fetch","then","handleres","method","JSON","stringify","headers","res","ok","json","status","Promise","reject"],"sources":["C:/Users/saras/Downloads/railway-reservation-system-master/railway-reservation-system-master/web/src/Services.js"],"sourcesContent":["//import config from './config.json'\n\nconst baseUrl =\"http://localhost:3001\"\n\nexport function login(body) {\n    console.log(body);\n    return callPost(baseUrl + '/login', body);\n}\n\nexport function register(body) {\n    return callPost(baseUrl + '/register', body);\n}\n\nexport function routes() {\n    return callGet(baseUrl + '/routes');\n}\n\nexport function route(station) {\n    return callGet(baseUrl + '/railway/route/' + station);\n}\n\nexport function trains() {\n    return callGet(baseUrl + '/railway/trains/');\n}\n\nexport function trainsByRoute(route) {\n    return callGet(baseUrl + '/railway/trains/' + route);\n}\n\nexport function classes() {\n    return callGet(baseUrl + '/railway/classes/');\n}\n\nexport function schedules() {\n    return callGet(baseUrl + '/railway/schedules/');\n}\n\nexport function validateCard(body) {\n    return callPost(baseUrl + '/payment/card', body);\n}\n\nexport function validatePhone(body) {\n    return callPost(baseUrl + '/payment/phone', body);\n}\n\nexport function makeReservation(body) {\n    return callPost(baseUrl + '/railway/reservations', body);\n}\n\nexport function getReservations(user) {\n    return callGet(baseUrl + '/railway/reservations/' + user);\n}\n\nexport function deleteReservation(id) {\n    return callDelete(baseUrl + '/railway/reservations/' + id);\n}\n\nexport function updateAccount(body, id) {\n    return callPut(baseUrl + '/users/' + id, body)\n}\n\nexport function contact(body) {\n    return callPost(baseUrl + '/railway/contact', body);\n}\n\nconst callGet = (url) => {\n    return fetch(url).then(handleres);\n}\n\nconst callPost = (url, body) => {\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" }\n    }).then(handleres);\n}\n\nconst callPut = (url, body) => {\n    return fetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" }\n    }).then(handleres);\n}\n\nconst callDelete = (url) => {\n    return fetch(url, {\n        method: 'DELETE'\n    }).then(handleres);\n}\n\nconst handleres = (res) => {\n    if (res.ok) {\n        return res.json();\n    }\n    else {\n        if (res.status === 404) {\n            return Promise.reject();\n        } else {\n            throw res.json();\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}